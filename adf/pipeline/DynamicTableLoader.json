{
	"name": "DynamicTableLoader",
	"properties": {
		"activities": [
			{
				"name": "lookup_emr_configs",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach_Tables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "filter_active_configs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('filter_active_configs').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Check_File_Exists",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"fieldList": [],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							}
						},
						{
							"name": "Load_Type_Decision",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If_File_Exists_Archive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().loadtype,'Full')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Get_Last_Load_Date",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat('SELECT COALESCE(CAST(MAX(loaddate) AS DATE), ''1900-01-01'') AS last_fetched_date FROM audit.load_logs WHERE data_source = ''', item().datasource, ''' AND tablename = ''', item().tablename, '''')",
													"type": "Expression"
												}
											},
											"firstRowOnly": true
										}
									},
									{
										"name": "Incremental_Load",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Get_Last_Load_Date",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@concat('SELECT *, ''', item().datasource, ''' AS datasource FROM ', item().tablename, ' WHERE ', item().watermark, ' >= ''', activity('Get_Last_Load_Date').output.firstRow.last_fetched_date, '''')\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false
										}
									},
									{
										"name": "Log_Incremental_Load",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Incremental_Load",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat('INSERT INTO audit.load_logs (data_source, tablename, numberofrowscopied, watermarkcolumnnname, loaddate) VALUES (''', item().datasource, ''', ''', item().tablename, ''', ', activity('Incremental_Load').output.rowsCopied, ', ''', item().watermark, ''', ''', utcNow(), ''')')",
													"type": "Expression"
												}
											},
											"firstRowOnly": false
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Full_Load",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@concat('select *,''',item().datasource,''' as datasource from ',item().tablename)\n\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false
										}
									},
									{
										"name": "Log_Full_Load",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Full_Load",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat('INSERT INTO audit.load_logs (data_source, tablename, numberofrowscopied, watermarkcolumnnname, loaddate) VALUES (''', item().datasource, ''', ''', item().tablename, ''', ', activity('Full_Load').output.rowsCopied, ', ''', coalesce(item().watermark, 'N/A'), ''', ''', utcNow(), ''')')",
													"type": "Expression"
												}
											},
											"firstRowOnly": false
										}
									}
								]
							}
						},
						{
							"name": "If_File_Exists_Archive",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Check_File_Exists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('Check_File_Exists').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Archive_Existing_File",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ParquetSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "ParquetReadSettings"
												}
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "filter_active_configs",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "lookup_emr_configs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('lookup_emr_configs').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().is_active, '1')",
						"type": "Expression"
					}
				}
			}
		],
		"folder": {
			"name": "project2-pipeline"
		},
		"annotations": [],
		"lastPublishTime": "2025-07-06T14:34:23Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}